services:
    proxy:
        build:
            context: .
            dockerfile: ./.tools/docker/Dockerfile.proxy
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./.tools/proxy.conf:/etc/nginx/nginx.conf
        depends_on:
            - nginx
        networks:
            - laravel

    php:
        container_name: ${DOCKER_PREFIX}_php
        build:
            context: .
            dockerfile: .tools/docker/Dockerfile
            target: base
        restart: unless-stopped
#        command: sh -c "php artisan serve --host=0.0.0.0 --port=8000"
        volumes:
            - ./:/usr/src
            - ./.tools/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
        depends_on:
            mysql:
                condition: service_healthy
        networks:
            - laravel

    mysql:
        build:
            args:
                password: secret
            context: .
            dockerfile: ./.tools/docker/Dockerfile.mysql
        container_name: ${DOCKER_PREFIX}_mysql
        restart: unless-stopped
        ports:
            - "33060:3306"
        healthcheck:
            test: mysql -h localhost -u root -psecret -e 'SELECT version();'
            start_period: 5s
            interval: 15s
            timeout: 5s
            retries: 5
        environment:
            - MYSQL_ROOT_PASSWORD=secret
        volumes:
            - mysqldata:/var/lib/mysql
        networks:
            - laravel

    nginx:
        build:
            context: .
            dockerfile: ./.tools/docker/Dockerfile.nginx
        container_name: ${DOCKER_PREFIX}_nginx
        command: sh -c "nginx -g \"daemon off;\""
        restart: unless-stopped
        volumes:
            - ./:/usr/src
            - ./.tools/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - php
        networks:
            - laravel

networks:
    laravel:
        driver: bridge

volumes:
    mysqldata:
