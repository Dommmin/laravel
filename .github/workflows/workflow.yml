name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

env:
  PHP_IMAGE: dommin/starter-php:${{ github.sha }}
  NGINX_IMAGE: dommin/starter-nginx:${{ github.sha }}
  MYSQL_IMAGE: dommin/starter-mysql:${{ github.sha }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-backend-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build images
        run: |
          docker build -t $PHP_IMAGE --build-arg user=dominik --build-arg uid=1000 -f ./.tools/docker/Dockerfile .
      - name: Install dependencies
        run: docker run --rm -t $PHP_IMAGE composer install --prefer-dist --no-progress
      - name: Push images
        run: |
          docker push $PHP_IMAGE

  build-mysql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build MySQL image
        run: docker build -t $MYSQL_IMAGE --build-arg password=${{ secrets.DB_PASSWORD }} -f ./.tools/docker/Dockerfile.mysql .
      - name: Push Mysql image
        run: docker push $MYSQL_IMAGE

  analyze:
    needs: [build-backend-images, build-mysql]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull PHP image
        run: docker pull $PHP_IMAGE
      - name: Pull MySQL image
        run: docker pull $MYSQL_IMAGE
      - name: Install dependencies
        run: docker run --rm -t $PHP_IMAGE composer install --prefer-dist --no-progress
      - name: Run phpinsights
        run: |
          docker compose -f docker-compose.ci.yml up -d
          docker compose -f docker-compose.ci.yml exec -T php php artisan insights --no-interaction --min-quality=80 --min-complexity=90 --min-architecture=90 --min-style=90 --ansi --format=github-action

  test:
    needs: [ build-backend-images, build-mysql ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull PHP image
        run: docker pull $PHP_IMAGE
      - name: Pull MySQL image
        run: docker pull $MYSQL_IMAGE
      - name: Install dependencies
        run: docker run --rm -t $PHP_IMAGE composer install --prefer-dist --no-progress
      - name: Run tests
        run: |
          docker compose -f docker-compose.ci.yml up -d
          docker compose -f docker-compose.ci.yml exec -T php php artisan test

  build-nginx:
    needs: [ analyze, test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build nginx image
        run: |
          docker build -t $NGINX_IMAGE -f ./Dockerfile.nginx .
          docker push $NGINX_IMAGE

  deploy:
    needs: [build-nginx]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run deploy script on remote server
        run: |
          sshpass -p ${{ secrets.DIGITALOCEAN_SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          cd /root
          sed -i "/IMAGE_TAG/c\IMAGE_TAG=${{ github.sha }}" /root/.env
          chmod +x deploy.sh
          ./deploy.sh
          exit
          EOF
